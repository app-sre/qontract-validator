schemas:
  "schema-1.yml":
    properties:
      crossref_field:
        "$ref": "/common-1.json#/definitions/crossref"
        "$schemaRef": "another-schema-1.yml"
  "another-schema-1.yml":
    properties:
      simple_field:
        type: string
graphql:
  $schema: "graphql-schema-1.yml"
  confs:
  - name: Schema_v1
    fields:
    - name: crossref_field
      type: AnotherSchema_v1
  - name: AnotherSchema_v1
    datafile: "another-schema-1.yml"
    fields:
    - name: simple_field
      type: string
  - name: Query
    fields:
    - type: Schema_v1
      name: schema_v1
      datafileSchema: "schema-1.yml"
data:
  file-1-schema-1.yml:
    $schema: schema-1.yml
    crossref_field:
      $ref: file-2-another-schema-1.yml
  file-2-another-schema-1.yml:
    $schema: another-schema-1.yml
    simple_field: bla
resources: {}
expected_nodes:
- data: file-2-another-schema-1.yml
  file_schema_path: schema-1.yml
  graphql_field_name: crossref_field
  graphql_type_name: Schema_v1
  jsonpaths:
  - crossref_field
  - $ref
  path: file-1-schema-1.yml
  schema:
    $ref: /common-1.json#/definitions/crossref
    $schemaRef: another-schema-1.yml
  schema_path: schema-1.yml
- data: bla
  file_schema_path: another-schema-1.yml
  graphql_field_name: simple_field
  graphql_type_name: AnotherSchema_v1
  jsonpaths:
  - simple_field
  path: file-2-another-schema-1.yml
  schema:
    type: string
  schema_path: another-schema-1.yml
